#!@PERL@ -w
# -*- perl -*-
#
# $NetBSD: blbump,v 1.4 2006/04/06 06:25:46 reed Exp $
#
# Copyright (c) 2003, 2004 The NetBSD Foundation, Inc.
#
# This code was originally contributed to the NetBSD Foundation, Inc.
# by Julio Merino <jmmv@NetBSD.org> and Thomas Klausner <wiz@NetBSD.org>.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of author nor the names of its contributors may
#    be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND
# CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
use strict;
use Getopt::Std;

my (@PACKAGES, $PKGSRCDIR, %opt, $pkg);

$PKGSRCDIR = $ENV{PKGSRCDIR};
if (! $PKGSRCDIR) {
    $PKGSRCDIR = "/usr/pkgsrc";
}

sub usage {
    print STDERR "usage: blbump [-h] [-p pkgsrcdir] [cat1/pkg1 ... catN/pkgN]\n\n";
    print STDERR "If no packages are given as arguments, the list is read from stdin.\n";
    print STDERR "Packages whose buildlink files cannot be updated automatically\n";
    print STDERR "are written to stdout.\n";
    exit 0;
}

sub blbump {
    my $pkgdir = shift;
    my ($pkgver, $ret);
    local (*MAKE);

    # ignore packages without buildlink3.mk files
    if (not -e "$PKGSRCDIR/$pkgdir/buildlink3.mk") {
	return 1;
    }
    open(MAKE, '-|', "cd $PKGSRCDIR/$pkgdir ; make show-var VARNAME=PKGNAME");
    $pkgver = <MAKE>;
    close(MAKE);
    chop $pkgver;
    $pkgver =~ s/-([^-]*)$/>=$1/;

    if (-f "$PKGSRCDIR/$pkgdir/buildlink3.mk") {
	$ret = bumpbl("$PKGSRCDIR/$pkgdir/buildlink3.mk", $pkgver);
	if ($ret == 0) {
	    return 0;
	}
    }

    return 1;
}

sub bumpbl {
    my ($backupbl, $done, $newbl, $oldbl, $pkgver);
    $oldbl = shift;
    $pkgver = shift;
    local (*OLDBL);

    open(OLDBL, $oldbl) or return 0;
    $newbl = "$oldbl.new";
    open(NEWBL, ">$newbl");

    $done = 0;
    while (<OLDBL>) {
        if ($done == 0 && /^(BUILDLINK_ABI_DEPENDS.+=[ \t]+)(.+)$/) {
            print NEWBL "$1$pkgver\n";
	    $done = 1;
        } elsif ($done == 0 && /^BUILDLINK_PKGSRCDIR(.*=[ \t]+)/) {
            print NEWBL "BUILDLINK_ABI_DEPENDS${1}$pkgver\n";
            print NEWBL $_;
            $done = 1;
        } else {
            print NEWBL $_;
        }
    }

    # no suitable place found
    if ($done == 0) {
        close(NEWBL);
        close(OLDBL);
        unlink "$newbl";
        return 0;
    }

    close(NEWBL);
    close(OLDBL);
    rename("$newbl", "$oldbl");

    return 1;
}

getopts('hp:', \%opt);
usage() if $opt{h};
if ($opt{p}) {
    $PKGSRCDIR = $opt{p};
}

@PACKAGES = ();
push @PACKAGES, @ARGV;

if (! -d $PKGSRCDIR || ! -d "$PKGSRCDIR/doc" || ! -d "$PKGSRCDIR/mk") {
    print STDERR "Invalid pkgsrc directory $PKGSRCDIR\n";
    exit 1;
}

if (! @PACKAGES) {
    while (<STDIN>) {
        chop;
        push @PACKAGES, $_;
    }
}

foreach $pkg (@PACKAGES) {
    if (! -f "$PKGSRCDIR/$pkg/Makefile") {
        print "$pkg\n";
    } else {
        print "$pkg\n" if blbump("$pkg") == 0;
        $pkg =~ /\/(.*)$/;
    }
}

exit 0;
