$NetBSD: patch-af,v 1.1 2006/04/22 17:45:05 joerg Exp $

--- cpia2_usb.c.orig	2006-04-22 17:35:19.000000000 +0000
+++ cpia2_usb.c
@@ -145,7 +145,7 @@ int check_for_app2_segment(unsigned char
 	unsigned char *buf;
 	
 	if (!buffer) {
-		ERR(__FUNCTION__": got null buffer pointer\n");
+		ERR("%s: got null buffer pointer\n", __FUNCTION__);
 		return -1;
 	}
 
@@ -516,7 +516,7 @@ int cpia2_usb_open(struct camera_data *c
 	int ret;
 
 	if (!cam) {
-		ERR("NULL pointer passed to "__FUNCTION__"\n");
+		ERR("NULL pointer passed to %s\n", __FUNCTION__);
 		return -EINVAL;
 	}
 
@@ -533,7 +533,7 @@ int cpia2_usb_open(struct camera_data *c
 
 	ret = cpia2_usb_set_alternate(cam, USBIF_CMDONLY);
 	if (ret < 0) {
-		ERR(__FUNCTION__": usb_set_interface error (ret = %d)\n",
+		ERR("%s: usb_set_interface error (ret = %d)\n", __FUNCTION__,
 		       ret);
 		/* free_sbufs(cam); *//* BSD patch */
 		return -EBUSY;
@@ -703,12 +703,12 @@ int cpia2_usb_transfer_cmd(struct camera
 	struct usb_device *udev = cam->dev;
 
 	if (!udev) {
-		ERR(__FUNCTION__": Internal driver error: udev is NULL\n");
+		ERR("%s: Internal driver error: udev is NULL\n", __FUNCTION__);
 		return -EINVAL;
 	}
 
 	if (!registers) {
-		ERR(__FUNCTION__": Internal driver error: register array is NULL\n");
+		ERR("%s: Internal driver error: register array is NULL\n", __FUNCTION__);
 		return -EINVAL;
 	}
 
@@ -949,7 +949,7 @@ void *cpia2_usb_probe(struct usb_device 
 	}
 
 	if (ifnum != 0) {	/* Only interface available for CPia2 */
-		ERR(__FUNCTION__": Invalid interface number %d\n", ifnum);
+		ERR("%s: Invalid interface number %d\n", __FUNCTION__, ifnum);
 		return NULL;
 	}
 	udev->interfacedesc.uid_config_index = USB_CURRENT_CONFIG_INDEX;
@@ -972,7 +972,7 @@ void *cpia2_usb_probe(struct usb_device 
 	usb_set_configuration(udev, 1);
 	ret = cpia2_usb_set_alternate(cam, USBIF_CMDONLY);
 	if (ret < 0) {
-		ERR(__FUNCTION__": usb_set_interface error (ret = %d)\n",
+		ERR("%s: usb_set_interface error (ret = %d)\n", __FUNCTION__,
 		       ret);
 		kfree(cam);
 		return NULL;
@@ -987,7 +987,7 @@ void *cpia2_usb_probe(struct usb_device 
 #endif	/* BSD patch */	
 
 	if(cpia2_init_camera(cam) != 0) {
-		ERR(__FUNCTION__": failed to cpia2_init_camera\n");
+		ERR("%s: failed to cpia2_init_camera\n", __FUNCTION__);
 		/* cpia2_unregister_camera(cam); *//* BSD patch */
 		kfree(cam);
 		return NULL;
