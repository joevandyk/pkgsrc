$NetBSD: patch-aj,v 1.1 2006/05/11 18:55:31 joerg Exp $

--- render/surface.h.orig	2006-04-28 16:19:45.000000000 +0000
+++ render/surface.h
@@ -425,8 +425,8 @@ class CqMotionSurface : public CqBasicSu
 		virtual	~CqMotionSurface()
 		{
 			TqInt i;
-			for ( i = 0; i < cTimes(); i++ )
-				GetMotionObject( Time( i ) ) ->Release();
+			for ( i = 0; i < this->cTimes(); i++ )
+				GetMotionObject( this->Time( i ) ) ->Release();
 		}
 
 		/** Get combnied bound for all times
@@ -436,8 +436,8 @@ class CqMotionSurface : public CqBasicSu
 		{
 			CqBound B( FLT_MAX, FLT_MAX, FLT_MAX, -FLT_MAX, -FLT_MAX, -FLT_MAX );
 			TqInt i;
-			for ( i = 0; i < cTimes(); i++ )
-				B = B.Combine( GetMotionObject( Time( i ) ) ->Bound() );
+			for ( i = 0; i < this->cTimes(); i++ )
+				B = B.Combine( GetMotionObject( this->Time( i ) ) ->Bound() );
 
 			return ( B );
 		}
@@ -447,10 +447,10 @@ class CqMotionSurface : public CqBasicSu
 		{
 			CqMotionMicroPolyGrid * pGrid = new CqMotionMicroPolyGrid;
 			TqInt i;
-			for ( i = 0; i < cTimes(); i++ )
+			for ( i = 0; i < this->cTimes(); i++ )
 			{
-				CqMicroPolyGridBase* pGrid2 = GetMotionObject( Time( i ) ) ->Dice();
-				pGrid->AddTimeSlot( Time( i ), pGrid2 );
+				CqMicroPolyGridBase* pGrid2 = GetMotionObject( this->Time( i ) ) ->Dice();
+				pGrid->AddTimeSlot( this->Time( i ), pGrid2 );
 			}
 			return ( pGrid );
 		}
@@ -459,11 +459,11 @@ class CqMotionSurface : public CqBasicSu
 		virtual	TqInt	Split( std::vector<CqBasicSurface*>& aSplits )
 		{
 			std::vector<std::vector<CqBasicSurface*> > aaMotionSplits;
-			aaMotionSplits.resize( cTimes() );
+			aaMotionSplits.resize( this->cTimes() );
 			TqInt cSplits = 0;
 			TqInt i;
-			for ( i = 0; i < cTimes(); i++ )
-				cSplits = GetMotionObject( Time( i ) ) ->Split( aaMotionSplits[ i ] );
+			for ( i = 0; i < this->cTimes(); i++ )
+				cSplits = GetMotionObject( this->Time( i ) ) ->Split( aaMotionSplits[ i ] );
 
 			// Now build motion surfaces from the splits and pass them back.
 			for ( i = 0; i < cSplits; i++ )
@@ -473,8 +473,8 @@ class CqMotionSurface : public CqBasicSu
 				pNewMotion->m_fDiceable = TqTrue;
 				pNewMotion->m_EyeSplitCount = m_EyeSplitCount;
 				TqInt j;
-				for ( j = 0; j < cTimes(); j++ )
-					pNewMotion->AddTimeSlot( Time( j ), reinterpret_cast<T>( aaMotionSplits[ j ][ i ] ) );
+				for ( j = 0; j < this->cTimes(); j++ )
+					pNewMotion->AddTimeSlot( this->Time( j ), reinterpret_cast<T>( aaMotionSplits[ j ][ i ] ) );
 				aSplits.push_back( pNewMotion );
 			}
 			return ( cSplits );
@@ -485,11 +485,11 @@ class CqMotionSurface : public CqBasicSu
 		 */
 		virtual TqBool	Diceable()
 		{
-			TqBool f = GetMotionObject( Time( 0 ) ) ->Diceable();
+			TqBool f = GetMotionObject( this->Time( 0 ) ) ->Diceable();
 			// Copy the split info so that at each time slot, the gprims split the same.
 			TqInt i;
-			for ( i = 1; i < cTimes(); i++ )
-				GetMotionObject( Time( i ) ) ->CopySplitInfo( *GetMotionObject( Time( 0 ) ) );
+			for ( i = 1; i < this->cTimes(); i++ )
+				GetMotionObject( this->Time( i ) ) ->CopySplitInfo( *GetMotionObject( this->Time( 0 ) ) );
 			return ( f );
 		}
 
@@ -500,7 +500,7 @@ class CqMotionSurface : public CqBasicSu
 		 */
 		virtual void	Transform( const CqMatrix& matTx, const CqMatrix& matITTx, const CqMatrix& matRTx )
 		{
-			GetMotionObject( 0 ) ->Transform( matTx, matITTx, matRTx );
+			this->GetMotionObject( 0 ) ->Transform( matTx, matITTx, matRTx );
 		}
 
 		/** Set the surface parameters of all GPrims to match those on the spefified one.
@@ -509,8 +509,8 @@ class CqMotionSurface : public CqBasicSu
 		virtual	void	SetSurfaceParameters( const CqBasicSurface& From )
 		{
 			TqInt i;
-			for ( i = 0; i < cTimes(); i++ )
-				GetMotionObject( Time( i ) ) ->SetSurfaceParameters( From );
+			for ( i = 0; i < this->cTimes(); i++ )
+				GetMotionObject( this->Time( i ) ) ->SetSurfaceParameters( From );
 		}
 		/** Force all GPrims to be undiceable.
 		 */
@@ -518,8 +518,8 @@ class CqMotionSurface : public CqBasicSu
 		{
 			CqBasicSurface::ForceUndiceable();
 			TqInt i;
-			for ( i = 0; i < cTimes(); i++ )
-				GetMotionObject( Time( i ) ) ->ForceUndiceable();
+			for ( i = 0; i < this->cTimes(); i++ )
+				GetMotionObject( this->Time( i ) ) ->ForceUndiceable();
 		}
 
 		/** Mark all GPrims to be discarded.
@@ -528,21 +528,21 @@ class CqMotionSurface : public CqBasicSu
 		{
 			CqBasicSurface::Discard();
 			TqInt i;
-			for ( i = 0; i < cTimes(); i++ )
-				GetMotionObject( Time( i ) ) ->Discard();
+			for ( i = 0; i < this->cTimes(); i++ )
+				GetMotionObject( this->Time( i ) ) ->Discard();
 		}
 
 		virtual	TqUint	cUniform() const
 		{
-			return ( GetMotionObject( Time( 0 ) ) ->cUniform() );
+			return ( GetMotionObject( this->Time( 0 ) ) ->cUniform() );
 		}
 		virtual	TqUint	cVarying() const
 		{
-			return ( GetMotionObject( Time( 0 ) ) ->cVarying() );
+			return ( GetMotionObject( this->Time( 0 ) ) ->cVarying() );
 		}
 		virtual	TqUint	cVertex() const
 		{
-			return ( GetMotionObject( Time( 0 ) ) ->cVertex() );
+			return ( GetMotionObject( this->Time( 0 ) ) ->cVertex() );
 		}
 
 		// Overrides from CqMotionSpec
