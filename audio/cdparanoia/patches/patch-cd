$NetBSD: patch-cd,v 1.4 2006/09/03 17:13:30 ben Exp $

--- interface/common_interface.c.orig	2000-04-19 15:41:04.000000000 -0700
+++ interface/common_interface.c
@@ -9,23 +9,39 @@
  ******************************************************************/
 
 #include <math.h>
+#if defined(__APPLE__) && defined(__MACH__)
+#include <sys/syslimits.h>
+#include <assert.h>
+#include <stdlib.h>
+#include <paths.h>
+#include <fcntl.h>
+#endif
 #include "low_interface.h"
 #include "utils.h"
 #include "smallft.h"
 
+#ifdef __linux__
 #include <linux/hdreg.h>
+#endif
 
 /* Test for presence of a cdrom by pinging with the 'CDROMVOLREAD' ioctl() */
 int ioctl_ping_cdrom(int fd){
+#ifdef __linux__
   struct cdrom_volctrl volctl;
   if (ioctl(fd, CDROMVOLREAD, &volctl)) 
     return(1); /* failure */
+#elif defined(__FreeBSD__) || defined(__NetBSD__) || defined(__DragonFly__)
+  struct ioc_vol volctl;
+  if (ioctl(fd, CDIOCGETVOL, &volctl)) 
+    return(1); /* failure */
+#endif
 
   return(0);
   /* success! */
 }
 
 
+#ifdef __linux__
 /* Use the ioctl thingy above ping the cdrom; this will get model info */
 char *atapi_drive_info(int fd){
   /* Work around the fact that the struct grew without warning in
@@ -46,6 +62,7 @@ char *atapi_drive_info(int fd){
   free(id);
   return(ret);
 }
+#endif
 
 int data_bigendianp(cdrom_drive *d){
   float lsb_votes=0;
@@ -171,9 +188,12 @@ int data_bigendianp(cdrom_drive *d){
    knows the leasoud/leadin size. */
 
 int FixupTOC(cdrom_drive *d,int tracks){
+#ifdef __linux__
   struct cdrom_multisession ms_str;
+#endif
   int j;
   
+#if !(defined(__APPLE__) && defined(__MACH__))
   /* First off, make sure the 'starting sector' is >=0 */
   
   for(j=0;j<tracks;j++){
@@ -208,14 +228,26 @@ int FixupTOC(cdrom_drive *d,int tracks){
   /* For a scsi device, the ioctl must go to the specialized SCSI
      CDROM device, not the generic device. */
 
+#if !defined(__FreeBSD__) && !defined(__DragonFly__)
   if (d->ioctl_fd != -1) {
+#ifdef __linux__
     int result;
 
     ms_str.addr_format = CDROM_LBA;
     result = ioctl(d->ioctl_fd, CDROMMULTISESSION, &ms_str);
     if (result == -1) return -1;
+# define ms_addr	(ms_str.addr.lba)
+#endif
+
+#ifdef __NetBSD__
+    int ms_addr;
+
+    ms_addr = 0;	/* last session */
+    if (ioctl(d->ioctl_fd, CDIOREADMSADDR, &ms_addr) == -1)
+      return -1;
+#endif
 
-    if (ms_str.addr.lba > 100) {
+    if (ms_addr > 100) {
 
       /* This is an odd little piece of code --Monty */
 
@@ -223,14 +255,16 @@ int FixupTOC(cdrom_drive *d,int tracks){
       /* adjust end of last audio track to be in the first session */
       for (j = tracks-1; j >= 0; j--) {
 	if (j > 0 && !IS_AUDIO(d,j) && IS_AUDIO(d,j-1)) {
-	  if (d->disc_toc[j].dwStartSector > ms_str.addr.lba - 11400) 
-	    d->disc_toc[j].dwStartSector = ms_str.addr.lba - 11400;
+	  if (d->disc_toc[j].dwStartSector > ms_addr - 11400) 
+	    d->disc_toc[j].dwStartSector = ms_addr - 11400;
 	  break;
 	}
       }
       return 1;
     }
   }
+#endif
+#endif
   return 0;
 }
 
