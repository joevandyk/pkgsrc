$NetBSD: patch-ad,v 1.4 2006/09/03 17:13:30 ben Exp $

--- utils.h.orig	2000-04-19 15:41:04.000000000 -0700
+++ utils.h
@@ -1,5 +1,20 @@
 #include <stdlib.h>
+#ifdef __linux__
 #include <endian.h>
+#endif
+#ifdef __NetBSD__
+#include <sys/param.h>
+#if __NetBSD_Version__ >= 104010000
+#include <sys/endian.h>
+#else
+#include <machine/endian.h>
+#include <machine/bswap.h>
+#endif
+#endif
+#if defined(__APPLE__) && defined(__MACH__)
+#include <stdint.h>
+#include <machine/endian.h>
+#endif
 #include <stdio.h>
 #include <errno.h>
 #include <string.h>
@@ -19,15 +34,34 @@ static inline int bigendianp(void){
 }
 
 static inline int32_t swap32(int32_t x){
+#ifdef __NetBSD__
+  return bswap32(x);
+#else
+#if defined(__APPLE__) && defined(__MACH__)
+  return((((uint32_t)x & 0x000000ffU) << 24) | 
+        (((uint32_t)x & 0x0000ff00U) <<  8) | 
+        (((uint32_t)x & 0x00ff0000U) >>  8) | 
+        (((uint32_t)x & 0xff000000U) >> 24));
+#else
   return((((u_int32_t)x & 0x000000ffU) << 24) | 
 	 (((u_int32_t)x & 0x0000ff00U) <<  8) | 
 	 (((u_int32_t)x & 0x00ff0000U) >>  8) | 
 	 (((u_int32_t)x & 0xff000000U) >> 24));
+#endif
+#endif
 }
 
 static inline int16_t swap16(int16_t x){
+#ifdef __NetBSD__
+  return bswap16(x);
+#else
+#if defined(__APPLE__) && defined(__MACH__)
+  return((((uint16_t)x & 0x00ffU) <<  8) | 
+	 (((uint16_t)x & 0xff00U) >>  8));
+#endif
   return((((u_int16_t)x & 0x00ffU) <<  8) | 
 	 (((u_int16_t)x & 0xff00U) >>  8));
+#endif
 }
 
 #if BYTE_ORDER == LITTLE_ENDIAN
