$NetBSD: patch-al,v 1.2 2004/01/18 13:59:25 mrauch Exp $

--- subband_layer_1.cc.orig	1994-06-23 14:14:36.000000000 +0200
+++ subband_layer_1.cc
@@ -86,7 +86,7 @@ void SubbandLayer1::read_scalefactor (Ib
 }
 
 
-bool SubbandLayer1::read_sampledata (Ibitstream *stream)
+boolean SubbandLayer1::read_sampledata (Ibitstream *stream)
 {
   if (allocation)
   {
@@ -105,10 +105,10 @@ bool SubbandLayer1::read_sampledata (Ibi
 }
 
 
-bool SubbandLayer1::put_next_sample (e_channels channels,
+boolean SubbandLayer1::put_next_sample (e_channels channels,
 				     SynthesisFilter *filter1, SynthesisFilter *)
 {
-  if (allocation && channels != right)
+  if (allocation && channels != maplay_right)
   {
     register real scaled_sample = (sample * factor + offset) * scalefactor;
 #ifdef DEBUG
@@ -142,7 +142,7 @@ void SubbandLayer1IntensityStereo::read_
 }
 
 
-bool SubbandLayer1IntensityStereo::put_next_sample (e_channels channels,
+boolean SubbandLayer1IntensityStereo::put_next_sample (e_channels channels,
 	SynthesisFilter *filter1, SynthesisFilter *filter2)
 {
   if (allocation)
@@ -160,7 +160,7 @@ bool SubbandLayer1IntensityStereo::put_n
       filter1->input_sample (sample1, subbandnumber);
       filter2->input_sample (sample2, subbandnumber);
     }
-    else if (channels == left)
+    else if (channels == maplay_left)
     {
       register real sample1 = sample * scalefactor;
 #ifdef DEBUG
@@ -231,9 +231,9 @@ void SubbandLayer1Stereo::read_scalefact
 }
 
 
-bool SubbandLayer1Stereo::read_sampledata (Ibitstream *stream)
+boolean SubbandLayer1Stereo::read_sampledata (Ibitstream *stream)
 {
-  bool returnvalue = SubbandLayer1::read_sampledata (stream);
+  boolean returnvalue = SubbandLayer1::read_sampledata (stream);
   if (channel2_allocation)
   {
     channel2_sample = real (stream->get_bits (channel2_samplelength));
@@ -246,11 +246,11 @@ bool SubbandLayer1Stereo::read_sampledat
 }
 
 
-bool SubbandLayer1Stereo::put_next_sample (e_channels channels,
+boolean SubbandLayer1Stereo::put_next_sample (e_channels channels,
 					   SynthesisFilter *filter1, SynthesisFilter *filter2)
 {
   SubbandLayer1::put_next_sample (channels, filter1, filter2);
-  if (channel2_allocation && channels != left)
+  if (channel2_allocation && channels != maplay_left)
   {
     register float sample2 = (channel2_sample * channel2_factor + channel2_offset) *
 			     channel2_scalefactor;
