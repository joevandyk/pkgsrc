$NetBSD: patch-ab,v 1.5 2004/02/04 13:35:52 markd Exp $

--- artsc/artsdsp.c.orig	2003-07-17 07:18:09.000000000 +1200
+++ artsc/artsdsp.c
@@ -133,6 +133,14 @@ int munmap(void *start, size_t length);
 
 static void artsdsp_doinit()
 {
+# ifdef RTLD_NEXT
+#  define OPEN_GLOBAL()		handle = RTLD_NEXT;
+#  define CLOSE_GLOBAL()	;
+# else
+#  define OPEN_GLOBAL()		handle = dlopen(NULL, DL_LAZY);
+#  define CLOSE_GLOBAL()	dlclose(handle);
+# endif
+	void *handle;
 	const char *env;
 	artsdsp_init = 1;
 
@@ -145,15 +153,31 @@ static void artsdsp_doinit()
 	mmapemu = env && !strcmp(env,"1");
 
 	/* resolve original symbols */
-	orig_open = (orig_open_ptr)dlsym(RTLD_NEXT,"open");
-	orig_close = (orig_close_ptr)dlsym(RTLD_NEXT,"close");
-	orig_write = (orig_write_ptr)dlsym(RTLD_NEXT,"write");
-	orig_read = (orig_read_ptr)dlsym(RTLD_NEXT,"read");
-	orig_ioctl = (orig_ioctl_ptr)dlsym(RTLD_NEXT,"ioctl");
-	orig_mmap = (orig_mmap_ptr)dlsym(RTLD_NEXT,"mmap");
-	orig_munmap = (orig_munmap_ptr)dlsym(RTLD_NEXT,"munmap");
-	orig_fopen = (orig_fopen_ptr)dlsym(RTLD_NEXT,"fopen");
-	orig_access = (orig_access_ptr)dlsym(RTLD_NEXT,"access");
+#if defined(__NetBSD__) && !defined(OPEN_SOUND_SYSTEM)
+ 	handle = dlopen(NULL, DL_LAZY);
+	orig_open = (orig_open_ptr)dlsym(handle,"open");
+	orig_close = (orig_close_ptr)dlsym(handle,"close");
+	orig_write = (orig_write_ptr)dlsym(handle,"write");
+	orig_read = (orig_read_ptr)dlsym(handle,"read");
+	orig_ioctl = (orig_ioctl_ptr)dlsym(handle,"ioctl");
+	orig_mmap = (orig_mmap_ptr)dlsym(handle,"mmap");
+	orig_munmap = (orig_munmap_ptr)dlsym(handle,"munmap");
+	orig_fopen = (orig_fopen_ptr)dlsym(handle,"fopen");
+	orig_access = (orig_access_ptr)dlsym(handle,"access");
+ 	(void) dlclose(handle);
+#else
+ 	OPEN_GLOBAL();
+	orig_open = (orig_open_ptr)dlsym(handle,"open");
+	orig_close = (orig_close_ptr)dlsym(handle,"close");
+	orig_write = (orig_write_ptr)dlsym(handle,"write");
+	orig_read = (orig_read_ptr)dlsym(handle,"read");
+	orig_ioctl = (orig_ioctl_ptr)dlsym(handle,"ioctl");
+	orig_mmap = (orig_mmap_ptr)dlsym(handle,"mmap");
+	orig_munmap = (orig_munmap_ptr)dlsym(handle,"munmap");
+	orig_fopen = (orig_fopen_ptr)dlsym(handle,"fopen");
+	orig_access = (orig_access_ptr)dlsym(handle,"access");
+ 	CLOSE_GLOBAL();
+#endif
 }
 
 static void 
@@ -258,10 +282,15 @@ int open (const char *pathname, int flag
   return sndfd;
 }
 
+#if defined(__NetBSD__) && !defined(OPEN_SOUND_SYSTEM)
+int _oss_ioctl (int fd, unsigned long request, void *argp)
+#else
 int ioctl (int fd, ioctl_request_t request, ...)
+#endif
 {
   int space, size, latency, odelay;
 
+#if !defined(__NetBSD__) || defined(OPEN_SOUND_SYSTEM)
   /*
    * FreeBSD needs ioctl with varargs. However I have no idea how to "forward"
    * the variable args ioctl to the orig_ioctl routine. So I expect the ioctl
@@ -273,6 +302,7 @@ int ioctl (int fd, ioctl_request_t reque
   va_start(args,request);
   argp = va_arg(args, void *);
   va_end(args);
+#endif
 
   CHECK_INIT();
 
