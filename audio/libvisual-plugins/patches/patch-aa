$NetBSD: patch-aa,v 1.4 2006/07/18 19:02:08 joerg Exp $

--- plugins/morph/alphablend/morph_alphablend.c.orig	2006-07-18 18:55:47.000000000 +0000
+++ plugins/morph/alphablend/morph_alphablend.c
@@ -33,18 +33,18 @@ typedef struct {
 	uint16_t b:5, g:6, r:5;
 } _color16;
 
-static inline int alpha_blend_buffer (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, int depth, float alpha);
+static int alpha_blend_buffer (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, int depth, float alpha);
 
 /* alpha blenders */
-static inline int alpha_blend_8_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
-static inline int alpha_blend_16_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
-static inline int alpha_blend_24_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
-static inline int alpha_blend_32_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
-
-static inline int alpha_blend_8_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
-static inline int alpha_blend_16_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
-static inline int alpha_blend_24_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
-static inline int alpha_blend_32_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
+static int alpha_blend_8_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
+static int alpha_blend_16_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
+static int alpha_blend_24_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
+static int alpha_blend_32_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
+
+static int alpha_blend_8_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
+static int alpha_blend_16_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
+static int alpha_blend_24_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
+static int alpha_blend_32_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha);
 
 int lv_morph_alpha_init (VisPluginData *plugin);
 int lv_morph_alpha_cleanup (VisPluginData *plugin);
@@ -109,7 +109,7 @@ int lv_morph_alpha_apply (VisPluginData 
 	return 0;
 }
 
-static inline int alpha_blend_buffer (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, int depth, float alpha)
+static  int alpha_blend_buffer (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, int depth, float alpha)
 {
 
 	if (visual_cpu_get_mmx ()) {
@@ -149,7 +149,7 @@ static inline int alpha_blend_buffer (ui
  * 32                   x		x
  */
 
-static inline int alpha_blend_8_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
+static  int alpha_blend_8_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
 {
 	uint8_t ialpha = (alpha * 255);
 	int i;
@@ -161,7 +161,7 @@ static inline int alpha_blend_8_c (uint8
 	return 0;
 }
 
-static inline int alpha_blend_16_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
+static  int alpha_blend_16_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
 {
 	uint8_t ialpha = (alpha * 255);
 	_color16 *destr = (_color16 *) dest;
@@ -178,7 +178,7 @@ static inline int alpha_blend_16_c (uint
 	return 0;
 }
 
-static inline int alpha_blend_24_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
+static  int alpha_blend_24_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
 {
 	uint8_t ialpha = (alpha * 255);
 	int i;
@@ -190,7 +190,7 @@ static inline int alpha_blend_24_c (uint
 	return 0;
 }
 
-static inline int alpha_blend_32_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
+static  int alpha_blend_32_c (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
 {
 	uint8_t ialpha = (alpha * 255);
 	int i;
@@ -202,7 +202,7 @@ static inline int alpha_blend_32_c (uint
 	return 0;
 }
 
-static inline int alpha_blend_8_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
+static  int alpha_blend_8_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
 {
 	uint32_t aalpha = (alpha * 255);
 	uint32_t ialpha = aalpha;
@@ -247,7 +247,7 @@ static inline int alpha_blend_8_mmx (uin
 	return 0;
 }
 
-static inline int alpha_blend_16_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
+static  int alpha_blend_16_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
 {
 	uint8_t ialpha = (alpha * 255);
 	_color16 *destr = (_color16 *) dest;
@@ -264,7 +264,7 @@ static inline int alpha_blend_16_mmx (ui
 	return 0;
 }
 
-static inline int alpha_blend_24_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
+static  int alpha_blend_24_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
 {
 	uint8_t ialpha = (alpha * 255);
 	int i;
@@ -276,7 +276,7 @@ static inline int alpha_blend_24_mmx (ui
 	return 0;
 }
 
-static inline int alpha_blend_32_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
+static  int alpha_blend_32_mmx (uint8_t *dest, uint8_t *src1, uint8_t *src2, int size, float alpha)
 {
 	uint32_t ialpha = (alpha * 255);
 	int i;
