$NetBSD: patch-aa,v 1.2 2005/12/01 18:13:24 wiz Exp $

--- src/s/netbsd.h.orig	1995-10-12 11:53:15.000000000 +0100
+++ src/s/netbsd.h
@@ -3,6 +3,10 @@
 /* Get most of the stuff from bsd4.3 */
 #include "bsd4-3.h"
 
+#if defined (__alpha__) && !defined (__ELF__)
+#define NO_SHARED_LIBS
+#endif
+
 /* For mem-limits.h.  */
 #define BSD4_2
 
@@ -30,8 +34,8 @@
 #define NO_TERMIO
 
 #define LIBS_DEBUG
-/* -lutil is not needed for NetBSD >0.9.  */
-#define LIBS_SYSTEM -lutil -lcrypt
+#define LIBS_SYSTEM -lcrypt
+
 #define LIBS_TERMCAP -ltermcap
 
 #define NEED_ERRNO
@@ -40,7 +44,9 @@
 /* Netbsd has POSIX-style pgrp behavior.  */
 #undef BSD_PGRPS
 
-#ifndef NO_SHARED_LIBS
+#define GETPGRP_NO_ARG
+
+#if !defined (NO_SHARED_LIBS) && ! defined (__ELF__)
 /* These definitions should work for either dynamic or static linking,
    whichever is the default for `cc -nostdlib'.  */
 #define HAVE_TEXT_START		/* No need to define `start_of_text'.  */
@@ -54,14 +60,34 @@
 #define N_BSSADDR(x) (N_ALIGN(x, N_DATADDR(x)+x.a_data))
 #define N_TRELOFF(x) N_RELOFF(x)
 #endif
-#endif /* not NO_SHARED_LIBS */
-
-/* Reread the time zone on startup.  */
-#define LOCALTIME_CACHE
+#endif /* not NO_SHARED_LIBS and not ELF */
 
 #define HAVE_WAIT_HEADER
+#define WAIT_USE_INT
 
-/* 94.7.29 by T.Sakakibara <tomo@axis.co.jp> */
-#ifdef emacs
-#include <sys/types.h>
-#endif
+#define NO_MATHERR
+
+#define AMPERSAND_FULL_NAME
+
+#ifdef __ELF__
+/* Here is how to find X Windows.  LD_SWITCH_X_SITE_AUX gives an -R option
+   says where to find X windows at run time.  We convert it to a -rpath option
+   which is what OSF1 uses.  */
+#define LD_SWITCH_SYSTEM `echo LD_SWITCH_X_SITE_AUX | sed -e 's/-R/-Wl,-rpath,/'`
+
+#define HAVE_TEXT_START		/* No need to define `start_of_text'.  */
+#define UNEXEC unexelf.o
+#define ORDINARY_LINK
+
+#if defined(__i386__)
+#define DATA_SEG_BITS 0x08000000
+#endif /* __i386__ */
+
+#endif /* __ELF__ */
+
+/* On post 1.3 releases of NetBSD, gcc -nostdlib also clears
+   the library search parth, i.e. it won't search /usr/lib
+   for libc and friends. Using -nostartfiles instead avoids
+   this problem, and will also work on earlier NetBSD releases */
+
+#define LINKER $(CC) -nostartfiles
