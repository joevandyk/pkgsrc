$NetBSD: patch-aw,v 1.1 2006/10/21 11:53:13 agc Exp $

--- ./sfsmisc/sfsserv.C.orig	2002-12-01 01:11:21.000000000 +0000
+++ ./sfsmisc/sfsserv.C
@@ -177,7 +177,7 @@ sfsserv::sfs_connect (svccb *sbp)
     return;
   }
   cd.alloc ();
-  cd->ci = *sbp->template getarg <sfs_connectarg> ();
+  cd->ci = *sbp->getarg <sfs_connectarg> ();
   cd->cr.set_status (SFS_OK);
   cd->cr.reply->charge.bitcost = sfs_hashcost;
   rnd.getbytes (cd->cr.reply->charge.target.base (), charge.target.size ());
@@ -267,7 +267,7 @@ sfs_login2_cb (ref<bool> destroyed, sfss
     return;
   }
 
-  sfs_loginarg *argp = sbp->template getarg<sfs_loginarg> ();
+  sfs_loginarg *argp = sbp->getarg<sfs_loginarg> ();
   sfs_loginres res (resp->status);
   switch (resp->status) {
   case SFSLOGIN_OK:
@@ -306,13 +306,13 @@ sfsserv::sfs_login (svccb *sbp)
   }
   if (c->rp.versno == 1) {
     sfsauth_loginres *resp = New sfsauth_loginres;
-    c->call (SFSAUTHPROC_LOGIN, sbp->template getarg<sfs_loginarg> (), resp,
+    c->call (SFSAUTHPROC_LOGIN, sbp->getarg<sfs_loginarg> (), resp,
 	     wrap (sfs_login_cb, destroyed, this, sbp, resp));
     return;
   }
   ref<sfsauth2_loginres> resp = New refcounted<sfsauth2_loginres> ();
   sfsauth2_loginarg arg;
-  arg.arg = *sbp->template getarg<sfs_loginarg> ();
+  arg.arg = *sbp->getarg<sfs_loginarg> ();
   arg.authid = authid;
   arg.source = strbuf () << client_name << "!"
 			 << (progname ? progname : str ("???"));
@@ -323,7 +323,7 @@ sfsserv::sfs_login (svccb *sbp)
 void
 sfsserv::sfs_logout (svccb *sbp)
 {
-  authfree (*sbp->template getarg<u_int32_t> ());
+  authfree (*sbp->getarg<u_int32_t> ());
   sbp->reply (NULL);
 }
 
@@ -337,7 +337,7 @@ sfsserv::sfs_idnames (svccb *sbp)
     return;
   }
 
-  ::sfs_idnums *argp = sbp->template getarg< ::sfs_idnums> ();
+  ::sfs_idnums *argp = sbp->getarg< ::sfs_idnums> ();
   ::sfs_idnames res;
   if (argp->uid != -1)
     if (struct passwd *p = getpwuid (argp->uid)) {
@@ -362,7 +362,7 @@ sfsserv::sfs_idnums (svccb *sbp)
     return;
   }
 
-  ::sfs_idnames *argp = sbp->template getarg< ::sfs_idnames> ();
+  ::sfs_idnames *argp = sbp->getarg< ::sfs_idnames> ();
   ::sfs_idnums res = { -1, -1 };
   if (argp->uidname.present)
     if (struct passwd *p = getpwnam (argp->uidname.name->cstr ()))
