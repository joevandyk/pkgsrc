$NetBSD: patch-bg,v 1.1 2006/10/21 11:53:13 agc Exp $

--- ./agent/sfsagent.C.orig	2002-11-27 22:51:39.000000000 +0000
+++ ./agent/sfsagent.C
@@ -148,7 +148,7 @@ sfsagent::agentdisp (svccb *sbp)
     break;
   case AGENTCB_AUTHINIT:
     if (name) {
-      sfsagent_authinit_arg *aa = sbp->template getarg<sfsagent_authinit_arg> ();
+      sfsagent_authinit_arg *aa = sbp->getarg<sfsagent_authinit_arg> ();
       if (aa->requestor) {
 	str s;
 	if (name == "sfscd")
@@ -164,10 +164,10 @@ sfsagent::agentdisp (svccb *sbp)
     gmgr.authmore (sbp);
     break;
   case AGENTCB_LOOKUP:
-    sfslookup (*sbp->template getarg<sfs_filename> (), wrap (lookupres, sbp));
+    sfslookup (*sbp->getarg<sfs_filename> (), wrap (lookupres, sbp));
     break;
   case AGENTCB_REVOKED:
-    revcheck (*sbp->template getarg<filename3> (), wrap (revokedres, sbp));
+    revcheck (*sbp->getarg<filename3> (), wrap (revokedres, sbp));
     break;
   case AGENTCB_CLONE:
     if (axprt_unix *ux = xprt2unix (x)) {
@@ -223,7 +223,7 @@ sfsagent::ctldisp (svccb *sbp)
   case AGENTCTL_ADDEXTAUTH:
     {
       sfsagent_addextauth_arg *aa = 
-	sbp->template getarg<sfsagent_addextauth_arg> ();
+	sbp->getarg<sfsagent_addextauth_arg> ();
       extauth *ea = New extauth (x, &gmgr, this);
       ea->pid = aa->pid;
       ea->expire = aa->expire;
@@ -244,7 +244,7 @@ sfsagent::ctldisp (svccb *sbp)
     }
   case AGENTCTL_ADDKEY:
     {
-      sfs_addkey_arg *aa = sbp->template getarg<sfs_addkey_arg> ();
+      sfs_addkey_arg *aa = sbp->getarg<sfs_addkey_arg> ();
       key *nk; 
       nk = New key (&gmgr);
       // XXX - hack for testing new version of protocol. 
@@ -268,7 +268,7 @@ sfsagent::ctldisp (svccb *sbp)
     }
   case AGENTCTL_REMAUTH:
     {
-      sfs_remauth_arg *ra = sbp->template getarg<sfs_remauth_arg> ();
+      sfs_remauth_arg *ra = sbp->getarg<sfs_remauth_arg> ();
       authmeth *a;
       bool ok = false;
       switch (ra->type) {
@@ -318,7 +318,7 @@ sfsagent::ctldisp (svccb *sbp)
     }
   case AGENTCTL_ADDCERTPROG:
     {
-      sfsagent_certprog *arg = sbp->template getarg<sfsagent_certprog> ();
+      sfsagent_certprog *arg = sbp->getarg<sfsagent_certprog> ();
       str av0;
       if (arg->av.size () > 0 && (av0 = find_program (arg->av[0]))) {
 	bool found = false;
@@ -351,7 +351,7 @@ sfsagent::ctldisp (svccb *sbp)
       size_t n = certprogs.size ();
       sfsagent_certprog cp;
       rxfilter rxf;
-      sfsauth_realm *arg = sbp->template getarg<sfsauth_realm> ();
+      sfsauth_realm *arg = sbp->getarg<sfsauth_realm> ();
       bool found = false;
 
       while (n--) {
@@ -383,7 +383,7 @@ sfsagent::ctldisp (svccb *sbp)
     }
   case AGENTCTL_ADDREVOKEPROG:
     {
-      sfsagent_revokeprog *arg = sbp->template getarg<sfsagent_revokeprog> ();
+      sfsagent_revokeprog *arg = sbp->getarg<sfsagent_revokeprog> ();
       str av0;
       if (arg->av.size () > 0 && (av0 = find_program (arg->av[0]))) {
 	arg->av[0] = av0;
@@ -416,7 +416,7 @@ sfsagent::ctldisp (svccb *sbp)
   case AGENTCTL_SETNOREVOKE:
     {
       sfsagent_norevoke_list *arg
-	= sbp->template getarg<sfsagent_norevoke_list> ();
+	= sbp->getarg<sfsagent_norevoke_list> ();
       for (sfs_hash *hid = arg->base (); hid < arg->lim (); hid++)
 	norevoke.insert (*hid);
       sbp->reply (NULL);
@@ -445,13 +445,13 @@ sfsagent::ctldisp (svccb *sbp)
     else if (name)
       sbp->replyref ((int32_t) EBUSY);
     else {
-      setname (*sbp->template getarg<sfs_hostname> ());
+      setname (*sbp->getarg<sfs_hostname> ());
       sbp->replyref ((int32_t) 0);
     }
     break;
   case AGENTCTL_REX:
     {
-      sfsagent_rex_arg *prca = sbp->template getarg<sfsagent_rex_arg> ();
+      sfsagent_rex_arg *prca = sbp->getarg<sfsagent_rex_arg> ();
       if (name) {
 	warn << name << ": " << prca->dest << "(rexsess)\n";
       }
@@ -465,13 +465,13 @@ sfsagent::ctldisp (svccb *sbp)
     }
   case AGENTCTL_KILLSESS:
     {
-      sbp->replyref (kill_rexsess (*sbp->template getarg<sfs_hostname> ()));
+      sbp->replyref (kill_rexsess (*sbp->getarg<sfs_hostname> ()));
       break;
     }
   case AGENTCTL_ADDSRPNAME:
     {
       sfsagent_srpname_pair *arg = 
-	sbp->template getarg<sfsagent_srpname_pair> ();
+	sbp->getarg<sfsagent_srpname_pair> ();
 
       if (arg->srpname && arg->srpname.len () > 0
 	  && arg->sfsname && arg->sfsname.len () > 0) {
@@ -500,7 +500,7 @@ sfsagent::ctldisp (svccb *sbp)
     }
   case AGENTCTL_LOOKUPSRPNAME:
     {
-      sfsagent_srpname *arg = sbp->template getarg<sfsagent_srpname> ();
+      sfsagent_srpname *arg = sbp->getarg<sfsagent_srpname> ();
       str *sfsname = srpnames[*arg];
 
       sfsagent_srpname_res res (false);
