$NetBSD: patch-ab,v 1.22 2007/08/03 17:03:30 obache Exp $

--- src/osdep/unix/Makefile.orig	2007-06-17 15:37:44.000000000 +0000
+++ src/osdep/unix/Makefile
@@ -48,7 +48,7 @@ GCCOPTLEVEL= -O2
 # Try to have some consistency in GCC builds.  We want optimization, but we
 # also want to be able to debug.
 
-GCCCFLAGS= -g $(GCCOPTLEVEL) -pipe -fno-omit-frame-pointer
+GCCCFLAGS= -pipe -fno-omit-frame-pointer
 GCC4CFLAGS= $(GCCCFLAGS) -Wno-pointer-sign
 
 
@@ -144,7 +144,7 @@ CHUNKSIZE=65536
 
 # Normally no need to change any of these
 
-ARCHIVE=c-client.a
+ARCHIVE=libc-client.la
 BINARIES=osdep.o mail.o misc.o newsrc.o smanager.o utf8.o utf8aux.o siglocal.o \
  dummy.o pseudo.o netmsg.o flstring.o fdstring.o \
  rfc822.o nntp.o smtp.o imap4r1.o pop3.o \
@@ -425,7 +425,7 @@ gso:	os_sol.h	# GCC Solaris
 	 RSHPATH=/usr/bin/rsh \
 	 BASECFLAGS="$(GCCCFLAGS)" \
 	 BASELDFLAGS="-lsocket -lnsl -lgen" \
-	 RANLIB=true CC=gcc
+	 RANLIB=true
 
 gsu:	# GCC SUN-OS
 	$(BUILD) `$(CAT) SPECIALS` OS=sun \
@@ -524,7 +524,7 @@ neb:	# NetBSD
 	$(BUILD) `$(CAT) SPECIALS` OS=bsi \
 	 CRXTYPE=nfs \
 	 SPOOLDIR=/var \
-	 ACTIVEFILE=/var/db/news/active \
+	 ACTIVEFILE=/var/news/db/active \
 	 RSHPATH=/usr/bin/rsh \
 	 BASECFLAGS="$(GCCCFLAGS)" \
 	 BASELDFLAGS="-lcrypt"
@@ -539,6 +539,16 @@ nec:	# NEC UX
 	 BASELDFLAGS="-lsocket -lnsl -lgen" \
 	 RANLIB=true CC=/usr/abiccs/bin/cc
 
+nep:	# NetBSD with PAM
+	$(BUILD) `$(CAT) SPECIALS` OS=bsi \
+	 CHECKPW=pam \
+	 CRXTYPE=nfs \
+	 SPOOLDIR=/var \
+	 ACTIVEFILE=/var/news/db/active \
+	 RSHPATH=/usr/bin/rsh \
+	 BASECFLAGS="$(GCCCFLAGS)" \
+	 BASELDFLAGS="-lpam"
+
 nto:	# QNX Neutrino RTP
 	$(BUILD) `$(CAT) SPECIALS` OS=$@ \
 	 CRXTYPE=nfs \
@@ -850,7 +860,7 @@ $(ARCHIVE): $(BINARIES)
 	@$(SH) ARCHIVE
 
 .c.o:
-	`$(CAT) CCTYPE` -c `$(CAT) CFLAGS` $*.c
+	$(LTCOMPILE) `$(CAT) CCTYPE` -c `$(CAT) CFLAGS` $*.c
 
 
 # Cleanup
@@ -910,7 +920,7 @@ osdep.o:mail.h misc.h env.h fs.h ftl.h n
 	@echo pem.h, buffer.h, bio.h, and crypto.h, that means that OpenSSL
 	@echo is not installed on your system.  Either install OpenSSL first
 	@echo or build with command: make `$(CAT) OSTYPE` SSLTYPE=none
-	`$(CAT) CCTYPE` -c `$(CAT) CFLAGS` `$(CAT) OSCFLAGS` -c osdep.c
+	$(LTCOMPILE) `$(CAT) CCTYPE` -c `$(CAT) CFLAGS` `$(CAT) OSCFLAGS` -c osdep.c
 
 osdep.c: osdepbas.c osdepckp.c osdeplog.c osdepssl.c
 	$(CAT) osdepbas.c osdepckp.c osdeplog.c osdepssl.c > osdep.c
@@ -961,7 +971,7 @@ onceenv:
 	 -DACTIVEFILE=\"$(ACTIVEFILE)\" -DNEWSSPOOL=\"$(NEWSSPOOL)\" \
 	 -DRSHPATH=\"$(RSHPATH)\" -DLOCKPGM=\"$(LOCKPGM)\" > OSCFLAGS
 	echo $(BASELDFLAGS) $(EXTRALDFLAGS) > LDFLAGS
-	echo "$(ARRC) $(ARCHIVE) $(BINARIES);$(RANLIB) $(ARCHIVE)" > ARCHIVE
+	echo "$(LTLINK) $(CC) -o $(ARCHIVE) $(BINARIES:.o=.lo) -rpath $(PREFIX)/lib -version-info $(CCLIENT_MAJOR):$(CCLIENT_MINOR) \`$(CAT) LDFLAGS\`" > ARCHIVE
 	echo $(OS) > OSTYPE
 	./drivers $(EXTRADRIVERS) $(DEFAULTDRIVERS) dummy
 	./mkauths $(EXTRAAUTHENTICATORS) $(DEFAULTAUTHENTICATORS)
