SAME(1)                 NetBSD General Commands Manual                 SAME(1)

NNAAMMEE
     ssaammee -- link identical files to save disk space

SSYYNNOOPPSSIISS
     ssaammee [--HHVVccddhhnnssttuuvvzz]

DDEESSCCRRIIPPTTIIOONN
     ssaammee takes a list of files (e.g. the output of find . -type f) on stdin.
     Each of the files is compared against each of the others.  Whenever two
     files are found that match exactly, the two files are linked (soft or
     hard) together.

   GGooaall
     The goal of this program is to conserve disk space when you have several
     different trees of large projects on your disk.  By creating hardlinks or
     softlinks between the files that are the same, you can save lots of disk
     space.  For example, two different versions of the Linux kernel only dif-
     fer in a small number of files.  By running this program you only need to
     store the contents of those files once.  This is especially useful if you
     have different versions of complete trees lying around.

   IImmpplleemmeennttaattiioonn
     The filesize of every file is used as an indication of wether two files
     can be the same. Whenever the filesizes match, the hashes of these two
     files are compared. Whenever these match, the file contents are compared.
     For every matching pair one of the two files is replaced by a hard link
     to the other file.  With the -s option a softlink is used.

     To allow you to do this incrementally, the "rm" is done on the file with
     the least links. This allows you to "merge" a new tree with several trees
     that have already been processed. The new tree has link count 1, while
     the old tree has a higher link count for those files that are likely can-
     didates for linkage.

     The current implementation keeps the "first" incantation of a file, and
     replaces further occurrances of the same file. This is significant when
     using softlinks.

   OOppttiioonnss
     --HH _n, ----hhaasshhssttaarrtt _n
             Start at hash value _n instead of 0.

     --VV, ----vveerrssiioonn
             Print the version of the program and exit.

     --cc _f_i_l_e, ----ccaacchhee _f_i_l_e
             Keep a cache between runs in file _f_i_l_e.

     --dd, ----ddeebbuugg
             Output some debug messages.

     --hh, ----hheellpp
             Output this page and exit successfully.

     --nn, ----ddrryyrruunn
             Only simulate.

     --ss, ----ssooffttlliinnkkss
             Create soft links instead of hard links.

     --uu, ----uusseerr
             Don't relink files owned by another user.

     --vv, ----vveerrbboossee
             Output verbose messages.

     --zz, ----nnuullllffiilleess
             Link empty files, too.  By default, only non-empty files are
             linked.

EEXXIITT SSTTAATTUUSS
     Zero on success, non-zero on failure.

EEXXAAMMPPLLEESS
     find . -type f -print | same

SSEEEE AALLSSOO
     find(1)

AAUUTTHHOORRSS
     Roger E. Wolff <R.E.Wolff@BitWizard.nl>,
     Geert Uytterhoeven <geert@linux-m68k.org>,
     Roland Illig <roland.illig@gmx.de>.

CCAAVVEEAATTSS
     ··   If your editor does not move the original aside before writing a new
         copy, you will change the file in ALL incarnations when editing a
         file.  Patch works just fine: it moves the original aside before cre-
         ating a new copy.  I'm confident that I could learn Emacs to do it
         this way too.  I'm too lazy to figure it out, so if you happen to
         know an easy way how to do this, please Email me at
         <R.E.Wolff@BitWizard.nl>.

     ··   There is a 1024 (BUFSIZE) character limit to pathnames when using
         symlinks.

NetBSD 4.0                       July 14, 2004                      NetBSD 4.0
