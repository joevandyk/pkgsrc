$NetBSD: patch-ax,v 1.1.1.1 2007/10/17 21:35:53 agc Exp $

--- guestd/main.c	2007/09/29 13:11:05	1.1
+++ guestd/main.c	2007/09/29 13:12:20
@@ -39,7 +39,7 @@
 #include <sys/wait.h>
 #include <errno.h>
 #include <stdlib.h>
-#if !defined(__FreeBSD__) && !defined(sun)
+#if !defined(__FreeBSD__) && !defined(sun) && !defined(__NetBSD__)
 #include <utmp.h>
 #include <pwd.h>
 #include <grp.h>
@@ -79,7 +79,7 @@
 #include "vmstdio.h"
 #include "vmBackup.h"
 
-#if !defined(__FreeBSD__) && !defined(sun)
+#if !defined(__FreeBSD__) && !defined(sun) && !defined(__NetBSD__)
 #include "socketMgr.h"
 #include "dnd.h"
 #endif
@@ -126,7 +126,7 @@
 # define HGFS_MOUNT_FLAGS       MS_DATA			/* from <sys/mount.h> */
 #endif
 
-#if !defined(__FreeBSD__) && !defined(sun)
+#if !defined(__FreeBSD__) && !defined(sun) && !defined(__NetBSD__)
 #define VMWAREUSER_CHECK_TIME          1000 /* 10 seconds */
 #define XAUTOSTART_CONF                "xautostart.conf"
 #define NR_XBLESSED_APP_DEFAULT        2
@@ -158,7 +158,7 @@
  * Global variables
  */
 
-#if !defined(__FreeBSD__) && !defined(sun)
+#if !defined(__FreeBSD__) && !defined(sun) && !defined(__NetBSD__)
 static const char *gBinDir;
 static char *gDefaultBlessedApp[] = {
    XBLESSED_APP1_DEFAULT,
@@ -525,7 +525,7 @@
 #endif /* sun */
 
 
-#if !defined(__FreeBSD__) && !defined(sun)
+#if !defined(__FreeBSD__) && !defined(sun) && !defined(__NetBSD__)
 /*
  *----------------------------------------------------------------------
  *
@@ -1496,7 +1496,7 @@
    int maxFd;                       /* Max fd of all Fd sets */
    fd_set readFds;                  /* Read fd set to select on */
    fd_set writeFds;
-#if !defined(__FreeBSD__) && !defined(sun)
+#if !defined(__FreeBSD__) && !defined(sun) && !defined(__NetBSD__)
    SocketSelectable *sockReadFds = NULL;
    SocketSelectable *sockWriteFds = NULL;
    int numSockReadFds = 0;
@@ -1539,7 +1539,7 @@
       }
    }
 
-#if !defined(__FreeBSD__) && !defined(sun)
+#if !defined(__FreeBSD__) && !defined(sun) && !defined(__NetBSD__)
    SocketMgr_GetSelectables(SOCKETMGR_IN,
                             &sockReadFds,
                             &numSockReadFds);
@@ -1597,7 +1597,7 @@
          curAsyncProc = NULL;
       }
 
-#if !defined(__FreeBSD__) && !defined(sun)
+#if !defined(__FreeBSD__) && !defined(sun) && !defined(__NetBSD__)
       for (index = 0; index < numSockReadFds; index++) {
          if (FD_ISSET(sockReadFds[index], &readFds)) {
             SocketMgr_ProcessSelectable(sockReadFds[index], SOCKETMGR_IN);
@@ -1612,7 +1612,7 @@
 #endif
    }
 
-#if !defined(__FreeBSD__) && !defined(sun)
+#if !defined(__FreeBSD__) && !defined(sun) && !defined(__NetBSD__)
    free((void *) sockReadFds);
    free((void *) sockWriteFds);
 #endif
@@ -1641,7 +1641,7 @@
 GuestdDaemon(GuestApp_Dict **pConfDict,       // IN/OUT
              int *gDaemonSignalPtr)           // IN/OUT
 {
-#if !defined(__FreeBSD__) && !defined(sun)
+#if !defined(__FreeBSD__) && !defined(sun) && !defined(__NetBSD__)
    pid_t vmwareuserPid = 0;
 #endif
    ToolsDaemon_Data *data = NULL;
@@ -1695,7 +1695,7 @@
          GuestApp_GetDictEntryBool(*pConfDict, CONFNAME_DISABLEQUERYDISKINFO));
    }
 
-#if !defined(__FreeBSD__) && !defined(sun)
+#if !defined(__FreeBSD__) && !defined(sun) && !defined(__NetBSD__)
    gBinDir = GuestApp_GetDictEntry(*pConfDict, CONFNAME_BINDIR);
    if (gBinDir == NULL) {
       gBinDir = "/usr/bin";
@@ -1775,7 +1775,7 @@
       ToolsDaemon_Cleanup(data);
    }
 
-#if !defined(__FreeBSD__) && !defined(sun)
+#if !defined(__FreeBSD__) && !defined(sun) && !defined(__NetBSD__)
    if (vmwareuserPid != 0) {
       kill(vmwareuserPid, SIGTERM);
    }
