$NetBSD: patch-ab,v 1.9 2006/01/05 21:22:14 joerg Exp $

--- configs/netbsd-g++-static.orig	Wed Jun 13 04:56:48 2001
+++ configs/netbsd-g++-static
@@ -1,44 +1,42 @@
 # Compiling
 INTERFACE_DECL_PATH 	= .
-SYSCONF_CXX		= g++
-SYSCONF_CC		= gcc
+SYSCONF_CXX		= c++
+SYSCONF_CC		= cc
+SYSCONF_CXX_LIB		= ${LIBTOOL} --mode=compile c++
 DASHCROSS		= 
 
 # Compiling with support libraries
-SYSCONF_CXXFLAGS_X11	= -I/usr/X11R6/include
+SYSCONF_CXXFLAGS_X11	= -I@X11BASE@/include
 SYSCONF_CXXFLAGS_QT	= -I$(QTDIR)/include
-SYSCONF_CXXFLAGS_OPENGL	= -I/usr/X11R6/include
+SYSCONF_CXXFLAGS_OPENGL	= -I@LOCALBASE@/include -I@X11BASE@/include
 
 # Compiling YACC output
 SYSCONF_CXXFLAGS_YACC     = -Wno-unused -Wno-parentheses
 
 # Linking with support libraries
-SYSCONF_RPATH_X11	= 
-SYSCONF_RPATH_QT	= 
-SYSCONF_RPATH_OPENGL	= 
+SYSCONF_RPATH_X11	= -Wl,-R@X11BASE@/lib
+SYSCONF_RPATH_QT	= -Wl,-R@QTDIR@/lib
+SYSCONF_RPATH_OPENGL	= -Wl,-R@X11BASE@/lib -Wl,-R@LOCALBASE@/lib
 
 # Linking with support libraries
 # X11
-SYSCONF_LFLAGS_X11	= -L/usr/X11R6/lib
+SYSCONF_LFLAGS_X11	= -L@X11BASE@/lib
 SYSCONF_LIBS_X11	= -lXext -lX11 -lm
 # Qt, Qt+OpenGL
 SYSCONF_LFLAGS_QT	= -L$(QTDIR)/lib
 SYSCONF_LIBS_QT		= -lqt$(QT_THREAD_SUFFIX)
 SYSCONF_LIBS_QT_OPENGL	= 
 # OpenGL
-SYSCONF_LFLAGS_OPENGL	= -L/usr/X11R6/lib
+SYSCONF_LFLAGS_OPENGL	= -L@LOCALBASE@/lib -L@X11BASE@/lib
 SYSCONF_LIBS_OPENGL	= -lGLU -lGL -lXmu
 # Yacc
 SYSCONF_LIBS_YACC	= 
 
 # Linking applications
-SYSCONF_LINK		= g++
+SYSCONF_LINK		= $(LIBTOOL) --mode=link c++
 SYSCONF_LFLAGS		= 
 SYSCONF_LIBS		= 
 
-# Link flags for shared objects
-SYSCONF_LFLAGS_SHOBJ	= -Bshareable
-
 # Flags for threading
 SYSCONF_CFLAGS_THREAD	= 
 SYSCONF_CXXFLAGS_THREAD	= 
@@ -51,34 +49,24 @@
 # UI compiler
 SYSCONF_UIC		= $(QTDIR)/bin/uic
 
-# Linking shared libraries
-#   - Build the $(TARGET) library, eg. lib$(TARGET).so.2.2.2
+# Linking libtool libraries
+#   - Build the $(TARGET) library, eg. lib$(TARGET).la
 #   - Place target in $(DESTDIR) - which has a trailing /
 #   - Usually needs to incorporate $(VER_MAJ), $(VER_MIN) and $(VER_PATCH)
 #
-SYSCONF_LINK_SHLIB	= ld
-SYSCONF_LINK_TARGET_SHARED	= lib$(TARGET).so.$(VER_MAJ).$(VER_MIN).$(VER_PATCH)
-SYSCONF_LINK_LIB_SHARED	= $(SYSCONF_LINK_SHLIB) -Bshareable $(LFLAGS) -o $(DESTDIR)$(SYSCONF_LINK_TARGET_SHARED) `lorder /usr/lib/c++rt0.o $(OBJECTS) $(OBJMOC) | tsort` $(LIBS)
+SYSCONF_LINK_TARGET	= lib$(TARGET).la
+SYSCONF_LINK_LIB	= rm -f $(DESTDIR)$(SYSCONF_LINK_TARGET); \
+	$(SYSCONF_LINK) $(LFLAGS) -rpath $(QTPREFIX)/lib \
+	-version-info $(VER_MAJ):$(VER_MIN) -o $(SYSCONF_LINK_TARGET) \
+	$(OBJECTS:.o=.lo) $(OBJMOC:.o=.lo) $(LIBS)
 
-# Linking static libraries
-#   - Build the $(TARGET) library, eg. lib$(TARGET).a
-#   - Place target in $(DESTDIR) - which has a trailing /
-#
-SYSCONF_AR		= ar cqs
-SYSCONF_LINK_TARGET_STATIC = lib$(TARGET).a
-SYSCONF_LINK_LIB_STATIC	= rm -f $(DESTDIR)$(SYSCONF_LINK_TARGET_STATIC) ; \
-				 $(SYSCONF_AR) $(DESTDIR)$(SYSCONF_LINK_TARGET_STATIC) $(OBJECTS) $(OBJMOC) 
 # Compiling application source
-SYSCONF_CXXFLAGS	= -O2
-SYSCONF_CFLAGS		= -O2
-SYSCONF_LINK_LIB	= $(SYSCONF_LINK_LIB_STATIC)
-SYSCONF_LINK_TARGET	= $(SYSCONF_LINK_TARGET_STATIC)
+#SYSCONF_CXXFLAGS	= -O2
+#SYSCONF_CFLAGS		= -O2
 # Compiling library source
-SYSCONF_CXXFLAGS_LIB	=
-SYSCONF_CFLAGS_LIB	=
+#SYSCONF_CXXFLAGS_LIB	=
+#SYSCONF_CFLAGS_LIB	=
 # Compiling shared-object source
-SYSCONF_CXXFLAGS_SHOBJ	= -fPIC
-SYSCONF_CFLAGS_SHOBJ	= -fPIC
 # Linking Qt
 SYSCONF_LIBS_QTLIB	= $(SYSCONF_CXXFLAGS_X11) $(QT_LIBS_MT) $(QT_LIBS_OPT)
 # Linking Qt applications
