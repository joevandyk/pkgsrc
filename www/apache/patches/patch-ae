$NetBSD: patch-ae,v 1.7 2004/10/29 13:48:31 abs Exp $

--- src/modules/standard/mod_include.c.orig	2004-10-25 16:44:04.000000000 +0100
+++ src/modules/standard/mod_include.c
@@ -50,7 +50,10 @@
 #include "http_log.h"
 #include "http_main.h"
 #include "util_script.h"
+#include "ap_include_extern.h"
+#include "ap_hook.h"
 #endif
+#define parse_string ap_include_parse_string
 
 #define STARTING_SEQUENCE "<!--#"
 #define ENDING_SEQUENCE "-->"
@@ -447,7 +450,8 @@ static int get_directive(FILE *in, char 
 /*
  * Do variable substitution on strings
  */
-static void parse_string(request_rec *r, const char *in, char *out,
+API_EXPORT(void)
+ap_include_parse_string(request_rec *r, const char *in, char *out,
 			size_t length, int leave_name)
 {
     char ch;
@@ -645,7 +649,8 @@ static int handle_include(FILE *in, requ
             parse_string(r, tag_val, parsed_string, sizeof(parsed_string), 0);
             if (tag[0] == 'f') {
                 /* be safe; only files in this directory or below allowed */
-		if (!is_only_below(parsed_string)) {
+		if ((ap_allow_options(r) & OPT_INCNOEXEC) &&
+		    !is_only_below(parsed_string)) {
                     error_fmt = "unable to include file \"%s\" "
                         "in parsed file %s";
                 }
@@ -1057,7 +1062,8 @@ static int find_file(request_rec *r, con
                         "in parsed file %s";
         }
         else {
-            ap_getparents(tag_val);    /* get rid of any nasties */
+	    if (ap_allow_options(r) & OPT_INCNOEXEC)
+                ap_getparents(tag_val);    /* get rid of any nasties */
             rr = ap_sub_req_lookup_file(tag_val, r);
 
             if (rr->status == HTTP_OK && rr->finfo.st_mode != 0) {
@@ -2140,6 +2146,16 @@ static int handle_printenv(FILE *in, req
     }
 }
 
+API_EXPORT(int)
+ap_include_register_extern(const char *cmd, ap_include_extern_func func) {
+    char cmdbuf[40] = "include::";
+
+    strncat(cmdbuf, cmd, 30);
+    ap_hook_configure(cmdbuf, AP_HOOK_SIG5(int,ptr,ptr,ptr,ptr), AP_HOOK_TOPMOST);
+    ap_hook_register(cmdbuf, func, NULL);
+
+    return 0;
+}
 
 
 /* -------------------------- The main function --------------------------- */
@@ -2275,6 +2291,13 @@ static void send_parsed_content(FILE *f,
             }
 #endif
             else {
+		char cmdbuf[40] = "include::";
+
+		strncat(cmdbuf, directive, 30);
+		if ((ap_hook_status(cmdbuf) >= AP_HOOK_STATE_CONFIGURED) &&
+		    (ap_hook_call(cmdbuf, &ret, f, r, error, timefmt) == TRUE))
+		    continue;
+
                 ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 			      "unknown directive \"%s\" "
 			      "in parsed doc %s",
